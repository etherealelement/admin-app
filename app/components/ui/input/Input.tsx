import { InputProps } from "./Input.props";
import styles from "./Input.module.scss";
import cn from "classnames";
import React, {ChangeEvent, useEffect} from "react";
import {useState} from "react";
import { useFormContext } from "react-hook-form";
import { formConfig } from "../../register-form/config/config-form";
import { InputMask } from '@react-input/mask';
export const Input = React.forwardRef(function Input({
	type,
	className,
	size,
  placeholder,
	nameField,
	typeInput,
	...props
}: InputProps, ref): JSX.Element {

	const {register} = useFormContext();
	const [isVisible, setIsVisible] = useState<boolean>(true);



	const isVisibleToggler = (type: "password" | "text" | "email" | "job"| "tel") => {
		switch (type) {
			case "password": {
				setIsVisible(false);
				break;
			}
			default: {
				setIsVisible(true)
				break;
			}
		}
	}

	useEffect(() => {
		isVisibleToggler(type)
	}, [type]);

	


	return (
		<div className={styles.wrapper}>
			{type === "job" && (
				<span className={styles.jobIcon}>
					<svg
						width="16"
						height="16"
						viewBox="0 0 16 16"
						fill="none"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path
							fillRule="evenodd"
							clipRule="evenodd"
							d="M7.66683 1.83333C4.44517 1.83333 1.8335 4.445 1.8335 7.66666C1.8335 10.8883 4.44517 13.5 7.66683 13.5C10.8885 13.5 13.5002 10.8883 13.5002 7.66666C13.5002 4.445 10.8885 1.83333 7.66683 1.83333ZM0.833496 7.66666C0.833496 3.89272 3.89288 0.833328 7.66683 0.833328C11.4408 0.833328 14.5002 3.89272 14.5002 7.66666C14.5002 9.37367 13.8742 10.9345 12.8394 12.1321L15.0204 14.3131C15.2156 14.5084 15.2156 14.825 15.0204 15.0202C14.8251 15.2155 14.5085 15.2155 14.3133 15.0202L12.1323 12.8392C10.9347 13.8741 9.37384 14.5 7.66683 14.5C3.89288 14.5 0.833496 11.4406 0.833496 7.66666Z"
							fill="#151515"
						/>
					</svg>
				</span>
			)}
			{typeInput === "phone" ? <InputMask
			mask="+7 (___) ___-__-__" replacement={{ _: /\d/ }}
			className={cn(styles.input, className, {
				[styles.large]: size === "large",
				[styles.medium]: size === "medium",
				[styles.small]: size === "small",
			})}
			placeholder="+7 (___) ___-__-__"
			{...formConfig(register, typeInput)}
			{...props}
			></InputMask> :<input
				name={nameField}
				className={cn(styles.input, className, {
					[styles.large]: size === "large",
					[styles.medium]: size === "medium",
					[styles.small]: size === "small",
				})}
                placeholder={placeholder}
				{...formConfig(register, typeInput)}
				{...props}
				type={isVisible ? "text" : "password"}
            />}
			{type === "password" && <span
				className={styles.iconCheck}
				onClick={() => setIsVisible(e => !e)}
			>
				{isVisible ?
					<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path fillRule="evenodd" clipRule="evenodd"
							  d="M10 6.87504C8.27413 6.87504 6.87502 8.27415 6.87502 10C6.87502 11.7259 8.27413 13.125 10 13.125C11.7259 13.125 13.125 11.7259 13.125 10C13.125 8.27415 11.7259 6.87504 10 6.87504ZM8.12502 10C8.12502 8.96451 8.96449 8.12504 10 8.12504C11.0356 8.12504 11.875 8.96451 11.875 10C11.875 11.0356 11.0356 11.875 10 11.875C8.96449 11.875 8.12502 11.0356 8.12502 10Z"
							  fill="#B1B5C3"/>
						<path fillRule="evenodd" clipRule="evenodd"
							  d="M10 2.70837C6.23824 2.70837 3.70443 4.96187 2.23383 6.87243L2.2073 6.90687C1.87472 7.33882 1.5684 7.73664 1.36059 8.20704C1.13806 8.71077 1.04169 9.25978 1.04169 10C1.04169 10.7403 1.13806 11.2893 1.36059 11.793C1.5684 12.2634 1.87472 12.6613 2.20731 13.0932L2.23383 13.1277C3.70443 15.0382 6.23824 17.2917 10 17.2917C13.7618 17.2917 16.2956 15.0382 17.7662 13.1277L17.7927 13.0932C18.1253 12.6613 18.4316 12.2634 18.6394 11.793C18.862 11.2893 18.9584 10.7403 18.9584 10C18.9584 9.25978 18.862 8.71077 18.6394 8.20704C18.4316 7.73663 18.1253 7.33881 17.7927 6.90685L17.7662 6.87243C16.2956 4.96187 13.7618 2.70837 10 2.70837ZM3.22437 7.63487C4.58222 5.87081 6.79199 3.95837 10 3.95837C13.2081 3.95837 15.4178 5.87081 16.7757 7.63487C17.1412 8.1097 17.3552 8.39342 17.4961 8.71216C17.6277 9.01005 17.7084 9.37415 17.7084 10C17.7084 10.6259 17.6277 10.99 17.4961 11.2879C17.3552 11.6067 17.1412 11.8904 16.7757 12.3652C15.4178 14.1293 13.2081 16.0417 10 16.0417C6.79199 16.0417 4.58222 14.1293 3.22437 12.3652C2.85888 11.8904 2.6448 11.6067 2.50399 11.2879C2.37238 10.99 2.29169 10.6259 2.29169 10C2.29169 9.37415 2.37238 9.01006 2.50399 8.71216C2.6448 8.39342 2.85888 8.1097 3.22437 7.63487Z"
							  fill="#B1B5C3"/>
					</svg> :
					<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path fillRule="evenodd" clipRule="evenodd"
							  d="M18.5796 5.25882C18.8968 5.3948 19.0438 5.76222 18.9078 6.07949L18.3334 5.83329C18.9078 6.07949 18.9079 6.07934 18.9078 6.07949L18.9072 6.08089L18.9063 6.08296L18.9037 6.08909L18.8948 6.10916C18.8873 6.12594 18.8766 6.14945 18.8628 6.17918C18.835 6.23864 18.7945 6.32308 18.7407 6.42842C18.6334 6.63896 18.473 6.93386 18.2571 7.28034C17.9024 7.84954 17.3937 8.56467 16.7184 9.2751L17.5253 10.082C17.7694 10.3261 17.7694 10.7219 17.5253 10.9659C17.2812 11.21 16.8855 11.21 16.6414 10.9659L15.8076 10.1321C15.2579 10.5927 14.6274 11.025 13.9126 11.3801L14.6906 12.5758C14.8788 12.8651 14.7969 13.2522 14.5076 13.4405C14.2182 13.6287 13.8311 13.5468 13.6428 13.2575L12.7352 11.8626C12.0857 12.0747 11.3826 12.2188 10.625 12.2705V13.75C10.625 14.0951 10.3452 14.375 10 14.375C9.65484 14.375 9.37502 14.0951 9.37502 13.75V12.2705C8.64083 12.2204 7.95766 12.0835 7.32494 11.882L6.42987 13.2575C6.24162 13.5469 5.85447 13.6288 5.56514 13.4405C5.27582 13.2523 5.19389 12.8651 5.38214 12.5758L6.14249 11.4073C5.42217 11.0555 4.78659 10.6251 4.2321 10.1652L3.43128 10.966C3.18721 11.2101 2.79148 11.2101 2.5474 10.966C2.30332 10.7219 2.30332 10.3262 2.5474 10.0821L3.3172 9.3123C2.63007 8.59589 2.11279 7.87209 1.75239 7.29551C1.53328 6.94499 1.37058 6.64633 1.26165 6.43303C1.20715 6.32631 1.166 6.24074 1.13789 6.18049C1.12383 6.15035 1.11302 6.12652 1.10543 6.10952L1.09643 6.0892L1.09373 6.083L1.09283 6.0809L1.09249 6.08011C1.09242 6.07996 1.09222 6.07949 1.66668 5.83329L1.09249 6.08011C0.956513 5.76284 1.10322 5.3948 1.42049 5.25882C1.73749 5.12296 2.10457 5.26958 2.24081 5.58631C2.24077 5.5862 2.24086 5.58642 2.24081 5.58631L2.24161 5.58813L2.24667 5.59956C2.25158 5.61056 2.25958 5.62821 2.27069 5.65202C2.29291 5.69966 2.32755 5.77183 2.37488 5.86452C2.46963 6.05004 2.61476 6.31685 2.81235 6.63296C3.20869 7.26702 3.80972 8.0892 4.62975 8.85128C5.35134 9.52188 6.23557 10.1396 7.29312 10.5465C8.08853 10.8525 8.98789 11.0416 10 11.0416C11.0348 11.0416 11.9518 10.8439 12.7604 10.5256C13.8116 10.1119 14.6898 9.49016 15.4056 8.81828C16.2136 8.05993 16.8058 7.24592 17.1962 6.61929C17.3909 6.30688 17.5339 6.04351 17.6272 5.86051C17.6738 5.76908 17.7079 5.69793 17.7298 5.65099C17.7408 5.62753 17.7486 5.61015 17.7535 5.59932L17.7584 5.58809L17.7589 5.58709C17.7589 5.58717 17.7589 5.58701 17.7589 5.58709M18.5796 5.25882C18.2624 5.12289 17.8949 5.26999 17.7589 5.58709L18.5796 5.25882ZM2.24081 5.58631C2.24077 5.5862 2.24086 5.58642 2.24081 5.58631V5.58631Z"
							  fill="#B1B5C3"/>
					</svg>

				}
			</span>}
		</div>
	);
})
